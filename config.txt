import pandas as pd
from typing import Iterable, Optional

def move_and_prefix_trailing_columns(
    df: pd.DataFrame,
    cols: Iterable[str],
    prefix: str = " | |",
) -> pd.DataFrame:
    """
    Rename specific columns by adding a prefix (default: ' | |') and move them
    to the end of the DataFrame in the *exact* order provided in `cols`.

    - If a column is already prefixed, it won't be re-prefixed.
    - Columns not present are ignored (no errors).
    - Non-target columns keep their original left-to-right order.

    Example:
        cols = ["Comments", "Submitted by", "Submitted time"]
        -> DataFrame ends with [' | |Comments', ' | |Submitted by', ' | |Submitted time']
           in that order.
    """
    df = df.copy()

    # 1) Build a mapping for renames (only if target is present and not yet prefixed)
    #    We treat a column as "target" if either:
    #      - its base name matches an item in `cols`, or
    #      - it already equals prefix + base name
    base_order = list(cols)  # preserve caller's order
    base_set = set(base_order)

    # Helper to detect base from a possibly prefixed column
    def base_name(col: str) -> str:
        if isinstance(col, str) and col.startswith(prefix):
            return col[len(prefix):]
        return col if isinstance(col, str) else col

    # Determine desired final names and what exists now
    rename_map = {}
    for col in df.columns:
        b = base_name(col)
        if b in base_set:
            desired = f"{prefix}{b}"
            # Only rename if it's not already the desired name
            if col != desired and desired not in df.columns:
                rename_map[col] = desired

    if rename_map:
        df = df.rename(columns=rename_map)

    # 2) Build final order: others first, then targets in the caller's order
    #    Collect the (now possibly renamed) target names that actually exist.
    target_final_names = [f"{prefix}{b}" for b in base_order if f"{prefix}{b}" in df.columns]

    # Keep original order for non-target columns
    others = [c for c in df.columns if c not in target_final_names]

    # 3) Reorder
    df = df[others + target_final_names]
    return df
