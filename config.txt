import io
import msoffcrypto
from pyxlsb import open_workbook
import pandas as pd

def read_protected_xlsb(file_bytes, open_password, write_password=None):
    """
    Read a password-protected XLSB file with potential write protection
    
    Args:
        file_bytes: Binary content of the XLSB file
        open_password: Password to open the file
        write_password: Password for write protection (if exists)
    
    Returns:
        Dictionary of {sheet_name: pandas DataFrame}
    """
    # First decrypt the file (open password)
    decrypted = io.BytesIO()
    try:
        office_file = msoffcrypto.OfficeFile(io.BytesIO(file_bytes))
        office_file.load_key(password=open_password)
        office_file.decrypt(decrypted)
        decrypted.seek(0)
    except Exception as e:
        raise ValueError(f"Failed to decrypt with open password: {str(e)}")
    
    # Handle XLSB format
    try:
        result = {}
        with open_workbook(decrypted) as wb:
            for sheet_name in wb.sheets:
                with wb.get_sheet(sheet_name) as sheet:
                    # Read all data into a list of lists
                    data = []
                    for row in sheet.rows():
                        data.append([item.v for item in row])
                    
                    # Convert to DataFrame
                    if data:
                        cols = data[0]
                        rows = data[1:]
                        result[sheet_name] = pd.DataFrame(rows, columns=cols)
        
        return result
    
    except Exception as e:
        raise ValueError(f"Failed to read XLSB content: {str(e)}")

# Example usage:
# with open('protected.xlsb', 'rb') as f:
#     file_bytes = f.read()
# data = read_protected_xlsb(file_bytes, 'open123', 'edit456')
