def adjust_cc_and_total(rows: list[dict]) -> list[dict]:
    # index rows by entity for grouped recalculation
    from collections import defaultdict

    grouped = defaultdict(list)
    for row in rows:
        grouped[row["entity"]].append(row)

    adjusted = []
    for entity, erows in grouped.items():
        # pull rows by business_line for easier lookup
        row_map = {r["business_line"].strip(): r for r in erows}

        total_row = row_map.get("Total")
        cib_row   = row_map.get("CIB")
        iwpb_row  = row_map.get("IWPB")
        cc_row    = row_map.get("CC")

        # figure out year keys dynamically
        year_keys = [k for k in total_row.keys() if k.startswith("Actual|")]

        for yk in year_keys:
            if yk == "Actual|Opening":
                continue  # keep CC opening
            if cc_row:
                cc_row[yk] = 0  # zero out later CC

            # recalc total = cib + iwpb + cc
            total_val = 0
            if cib_row:
                total_val += cib_row.get(yk, 0)
            if iwpb_row:
                total_val += iwpb_row.get(yk, 0)
            if cc_row:
                total_val += cc_row.get(yk, 0)

            if total_row:
                total_row[yk] = total_val

        # push all rows back
        adjusted.extend(erows)

    return adjusted
