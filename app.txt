import dash_ag_grid as dag
from dash import html

def create_ag_grid_table(
    dataframe, 
    table_id=None, 
    highlight_vars=None, 
    highlight_color='lightyellow',
    default_col_def=None
):
    """
    Convert a pandas DataFrame to a Dash AG Grid table with optional variable highlighting.
    
    Args:
        dataframe: pandas DataFrame to display
        table_id: Optional ID for the table component
        highlight_vars: Optional list of variables to highlight (future use)
        highlight_color: Background color for highlighted cells
        default_col_def: Optional dictionary of default column definitions
        
    Returns:
        A Dash AG Grid component
    """
    if dataframe.empty:
        return html.Div("No data available")
    
    # Convert dataframe to dictionary format for AG Grid
    row_data = dataframe.to_dict('records')
    column_defs = [{"field": col} for col in dataframe.columns]
    
    # Prepare default column definitions if not provided
    if default_col_def is None:
        default_col_def = {
            "resizable": True,
            "sortable": True,
            "filter": True,
            "editable": False,
            "minWidth": 100
        }
    
    # Apply highlighting if highlight_vars is provided
    if highlight_vars:
        # This will be used in the cellStyle to highlight specific variables
        column_defs = [
            {
                "field": col,
                "cellStyle": {"backgroundColor": highlight_color} 
                if col in highlight_vars 
                else None
            } 
            for col in dataframe.columns
        ]
    
    grid = dag.AgGrid(
        id=table_id,
        rowData=row_data,
        columnDefs=column_defs,
        defaultColDef=default_col_def,
        dashGridOptions={
            "pagination": True,
            "paginationPageSize": 10,
            "suppressCellFocus": True,
            "animateRows": False
        },
        style={"height": "400px", "width": "100%"},
        columnSize="sizeToFit",
    )
    
    return grid
