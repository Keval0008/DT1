import pandas as pd
import numpy as np

# Example DataFrame
df = pd.DataFrame({
    'col1': [1, 1, 2, 2, 3, 3],
    'col2': ['A', 'A', 'B', 'B', 'C', 'C'],
    'affiliate': ['None', None, 'abc', 'xyz', np.nan, 'CBA']
})

# Step 1: Standardize affiliate values (treat all None/Nan/etc as np.nan)
df['affiliate'] = df['affiliate'].replace(['None', 'NONE', 'none'], np.nan)

# Step 2: Create a temporary key based on all columns except 'affiliate'
cols_except_aff = [c for c in df.columns if c != 'affiliate']
df['group_key'] = df[cols_except_aff].astype(str).agg('|'.join, axis=1)

# Step 3: Aggregate affiliate values comma-separated for duplicates
result = (df.groupby('group_key', as_index=False)
            .agg({
                **{c: 'first' for c in cols_except_aff},
                'affiliate': lambda x: ', '.join(sorted(set(filter(pd.notna, x))))
            }))

# Step 4: If affiliate was all NaN, fill with np.nan
result['affiliate'] = result['affiliate'].replace('', np.nan)

# Drop helper column
result = result.drop(columns='group_key')

print(result)
